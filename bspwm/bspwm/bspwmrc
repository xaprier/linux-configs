#!/usr/bin/env bash
#
#  ██████╗ ███████╗██████╗ ██╗    ██╗███╗   ███╗██████╗  ██████╗
#  ██╔══██╗██╔════╝██╔══██╗██║    ██║████╗ ████║██╔══██╗██╔════╝
#  ██████╔╝███████╗██████╔╝██║ █╗ ██║██╔████╔██║██████╔╝██║
#  ██╔══██╗╚════██║██╔═══╝ ██║███╗██║██║╚██╔╝██║██╔══██╗██║
#  ██████╔╝███████║██║     ╚███╔███╔╝██║ ╚═╝ ██║██║  ██║╚██████╗
#  ╚═════╝ ╚══════╝╚═╝      ╚══╝╚══╝ ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
#	- z0mbi3
#	- https://github.com/gh0stzk/dotfiles
#	- z0mbi3.zk@protonmail.com
#

read -r RICETHEME <"$HOME"/.config/bspwm/.rice
export RICETHEME
PATH="$HOME/.config/bspwm/scripts:$PATH"
rice_dir="$HOME/.config/bspwm/rices/$RICETHEME"
export XDG_CURRENT_DESKTOP='bspwm'

# GTK Theming
export GTK_THEME="Catppuccin-Macchiato-Standard-Teal-Dark"
gsettings set org.gnome.desktop.interface icon-theme WhiteSur
gsettings set org.gnome.desktop.interface gtk-theme Catppuccin-Macchiato-Standard-Teal-Dark
gsettings set org.gnome.desktop.interface cursor-theme Qogir-Dark

# KDE Theming
export QT_QPA_PLATFORMTHEME=qt5ct
export QT_STYLE_OVERRIDE=kvantum

## Fix java applications
export _JAVA_AWT_WM_NONREPARENTING=1

# dual monitor handling
if xrandr -q | grep 'HDMI-0 connected'; then
    xrandr --output HDMI-0 --mode 1920x1080 --rate 144 --right-of eDP-1-1
fi
xrandr --output eDP-1-1 --mode 1920x1080 --rate 120.11

#  ╦ ╦╔═╗╦═╗╦╔═╔═╗╔═╗╔═╗╔═╗╔═╗╔═╗
#  ║║║║ ║╠╦╝╠╩╗╚═╗╠═╝╠═╣║  ║╣ ╚═╗
#  ╚╩╝╚═╝╩╚═╩ ╩╚═╝╩  ╩ ╩╚═╝╚═╝╚═╝
INTERNAL_MONITOR=$(xrandr -q | grep -oP 'eDP-[0-9-]+(?=\sconnected)')
EXTERNAL_MONITOR=$(xrandr -q | grep -oP 'HDMI-[0-9-]+(?=\sconnected)')
if [[ $EXTERNAL_MONITOR ]]; then
    bspc monitor "$EXTERNAL_MONITOR" -d 1 2 3 4
    bspc monitor "$INTERNAL_MONITOR" -d 5 6 7 8 9 10
    bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
    bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9 10
fi

## For two or three monitors configuration see https://github.com/gh0stzk/dotfiles/wiki/Two-or-more-monitors-setup

#  ╔╗ ╔═╗╔═╗╦ ╦╔╦╗  ╔═╗╔═╗╔╗╔╔═╗╦╔═╗
#  ╠╩╗╚═╗╠═╝║║║║║║  ║  ║ ║║║║╠╣ ║║ ╦
#  ╚═╝╚═╝╩  ╚╩╝╩ ╩  ╚═╝╚═╝╝╚╝╚  ╩╚═╝

bspc config external_rules_command "$HOME"/.config/bspwm/scripts/ExternalRules

bspc config window_gap 6
bspc config split_ratio 0.51
bspc config single_monocle true
bspc config borderless_monocle false
bspc config gapless_monocle false

bspc config focus_follows_pointer true
bspc config pointer_follows_focus false
bspc config pointer_motion_interval 5
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

#bspc wm --adopt-orphans
bspc rule -a scratch sticky=on state=floating focus=on

#  ╔═╗╦ ╦╔╦╗╔═╗╔═╗╔╦╗╔═╗╦═╗╔╦╗
#  ╠═╣║ ║ ║ ║ ║╚═╗ ║ ╠═╣╠╦╝ ║
#  ╩ ╩╚═╝ ╩ ╚═╝╚═╝ ╩ ╩ ╩╩╚═ ╩

# Set system vars for polybar
. SetSysVars

# Launch required programs ensuring they start only once
function start_once() {
    local program=$1
    shift
    if ! pgrep -f "$program" >/dev/null; then
        "$@" &
    fi
}

# Terminate already running polybar, stalonetray, sxhkd and dunst instances
processes=("sxhkd" "polybar" "dunst" "eww.*bar" "hidamari*" "picom" "cava" "Cava.sh")

for process in "${processes[@]}"; do
    if pgrep -f "$process" >/dev/null; then
        pkill -f "$process" >/dev/null
        # Wait for process termination
        while pgrep -f "$process" >/dev/null; do
            sleep 0.1
        done
    fi
done

# Load bspwm conf, colors, dunst, bars and/or eww widgets
. "${rice_dir}"/Theme.sh

start_once greenclip greenclip daemon
start_once nm-applet nm-applet
start_once libinput-gestures libinput-gestures -c ~/.config/libinput-gestures.conf
start_once xautolock xautolock -time 5 -locker "$HOME/.config/bspwm/scripts/AutoLock.sh"
start_once sxhkd sxhkd -c "$HOME/.config/bspwm/sxhkdrc"
start_once picom picom --experimental-backend --config "$HOME/.config/bspwm/picom.conf"
start_once dunst dunst -config "$HOME/.config/bspwm/dunstrc"
start_once eww eww -c "$HOME/.config/bspwm/eww daemon"
start_once polkit-gnome-authentication-agent-1 /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
start_once hidamari hidamari -b
